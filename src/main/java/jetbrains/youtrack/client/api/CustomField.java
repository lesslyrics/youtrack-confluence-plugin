/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

import static com.atlassian.renderer.v2.components.HtmlEscaper.escapeAll;

/**
 * Represents a custom field in YouTrack.
 */
@Schema(description = "Represents a custom field in YouTrack.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class CustomField {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("localizedName")
  private String localizedName = null;

  @JsonProperty("fieldType")
  private FieldType fieldType = null;

  @JsonProperty("isAutoAttached")
  private Boolean isAutoAttached = null;

  @JsonProperty("isDisplayedInIssueList")
  private Boolean isDisplayedInIssueList = null;

  @JsonProperty("ordinal")
  private Integer ordinal = null;

  @JsonProperty("aliases")
  private String aliases = null;

  @JsonProperty("fieldDefaults")
  private CustomFieldDefaults fieldDefaults = null;

  @JsonProperty("hasRunningJob")
  private Boolean hasRunningJob = null;

  @JsonProperty("isUpdateable")
  private Boolean isUpdateable = null;

  @JsonProperty("instances")
  private List<ProjectCustomField> instances = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public CustomField name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return escapeAll(name, true);
  }

  public void setName(String name) {
    this.name = name;
  }

  public CustomField localizedName(String localizedName) {
    this.localizedName = localizedName;
    return this;
  }

   /**
   * Get localizedName
   * @return localizedName
  **/
  @Schema(description = "")
  public String getLocalizedName() {
    return localizedName;
  }

  public void setLocalizedName(String localizedName) {
    this.localizedName = localizedName;
  }

  public CustomField fieldType(FieldType fieldType) {
    this.fieldType = fieldType;
    return this;
  }

   /**
   * Get fieldType
   * @return fieldType
  **/
  @Schema(description = "")
  public FieldType getFieldType() {
    return fieldType;
  }

  public void setFieldType(FieldType fieldType) {
    this.fieldType = fieldType;
  }

  public CustomField isAutoAttached(Boolean isAutoAttached) {
    this.isAutoAttached = isAutoAttached;
    return this;
  }

   /**
   * Get isAutoAttached
   * @return isAutoAttached
  **/
  @Schema(description = "")
  public Boolean isIsAutoAttached() {
    return isAutoAttached;
  }

  public void setIsAutoAttached(Boolean isAutoAttached) {
    this.isAutoAttached = isAutoAttached;
  }

  public CustomField isDisplayedInIssueList(Boolean isDisplayedInIssueList) {
    this.isDisplayedInIssueList = isDisplayedInIssueList;
    return this;
  }

   /**
   * Get isDisplayedInIssueList
   * @return isDisplayedInIssueList
  **/
  @Schema(description = "")
  public Boolean isIsDisplayedInIssueList() {
    return isDisplayedInIssueList;
  }

  public void setIsDisplayedInIssueList(Boolean isDisplayedInIssueList) {
    this.isDisplayedInIssueList = isDisplayedInIssueList;
  }

  public CustomField ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

   /**
   * Get ordinal
   * @return ordinal
  **/
  @Schema(description = "")
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }

  public CustomField aliases(String aliases) {
    this.aliases = aliases;
    return this;
  }

   /**
   * Get aliases
   * @return aliases
  **/
  @Schema(description = "")
  public String getAliases() {
    return aliases;
  }

  public void setAliases(String aliases) {
    this.aliases = aliases;
  }

  public CustomField fieldDefaults(CustomFieldDefaults fieldDefaults) {
    this.fieldDefaults = fieldDefaults;
    return this;
  }

   /**
   * Get fieldDefaults
   * @return fieldDefaults
  **/
  @Schema(description = "")
  public CustomFieldDefaults getFieldDefaults() {
    return fieldDefaults;
  }

  public void setFieldDefaults(CustomFieldDefaults fieldDefaults) {
    this.fieldDefaults = fieldDefaults;
  }

   /**
   * Get hasRunningJob
   * @return hasRunningJob
  **/
  @Schema(description = "")
  public Boolean isHasRunningJob() {
    return hasRunningJob;
  }

   /**
   * Get isUpdateable
   * @return isUpdateable
  **/
  @Schema(description = "")
  public Boolean isIsUpdateable() {
    return isUpdateable;
  }

  public CustomField instances(List<ProjectCustomField> instances) {
    this.instances = instances;
    return this;
  }

  public CustomField addInstancesItem(ProjectCustomField instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<ProjectCustomField>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * Get instances
   * @return instances
  **/
  @Schema(description = "")
  public List<ProjectCustomField> getInstances() {
    return instances;
  }

  public void setInstances(List<ProjectCustomField> instances) {
    this.instances = instances;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomField customField = (CustomField) o;
    return Objects.equals(this.name, customField.name) &&
        Objects.equals(this.localizedName, customField.localizedName) &&
        Objects.equals(this.fieldType, customField.fieldType) &&
        Objects.equals(this.isAutoAttached, customField.isAutoAttached) &&
        Objects.equals(this.isDisplayedInIssueList, customField.isDisplayedInIssueList) &&
        Objects.equals(this.ordinal, customField.ordinal) &&
        Objects.equals(this.aliases, customField.aliases) &&
        Objects.equals(this.fieldDefaults, customField.fieldDefaults) &&
        Objects.equals(this.hasRunningJob, customField.hasRunningJob) &&
        Objects.equals(this.isUpdateable, customField.isUpdateable) &&
        Objects.equals(this.instances, customField.instances) &&
        Objects.equals(this.id, customField.id) &&
        Objects.equals(this.$type, customField.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, localizedName, fieldType, isAutoAttached, isDisplayedInIssueList, ordinal, aliases, fieldDefaults, hasRunningJob, isUpdateable, instances, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomField {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    localizedName: ").append(toIndentedString(localizedName)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    isAutoAttached: ").append(toIndentedString(isAutoAttached)).append("\n");
    sb.append("    isDisplayedInIssueList: ").append(toIndentedString(isDisplayedInIssueList)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    fieldDefaults: ").append(toIndentedString(fieldDefaults)).append("\n");
    sb.append("    hasRunningJob: ").append(toIndentedString(hasRunningJob)).append("\n");
    sb.append("    isUpdateable: ").append(toIndentedString(isUpdateable)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
