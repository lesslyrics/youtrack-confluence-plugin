/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents default project-related settings of the custom field. These settings are applied at the moment when the custom field is attached to a project. After that, any changes in default settings do not affect the field settings for this project.
 */
@Schema(description = "Represents default project-related settings of the custom field. These settings are applied at the moment when the custom field is attached to a project. After that, any changes in default settings do not affect the field settings for this project.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = StateBundleCustomFieldDefaults.class, name = "StateBundleCustomFieldDefaults"),
  @JsonSubTypes.Type(value = BundleCustomFieldDefaults.class, name = "BundleCustomFieldDefaults"),
  @JsonSubTypes.Type(value = EnumBundleCustomFieldDefaults.class, name = "EnumBundleCustomFieldDefaults"),
  @JsonSubTypes.Type(value = UserCustomFieldDefaults.class, name = "UserCustomFieldDefaults"),
  @JsonSubTypes.Type(value = VersionBundleCustomFieldDefaults.class, name = "VersionBundleCustomFieldDefaults"),
  @JsonSubTypes.Type(value = OwnedBundleCustomFieldDefaults.class, name = "OwnedBundleCustomFieldDefaults"),
  @JsonSubTypes.Type(value = BuildBundleCustomFieldDefaults.class, name = "BuildBundleCustomFieldDefaults"),
})

public class CustomFieldDefaults {
  @JsonProperty("canBeEmpty")
  private Boolean canBeEmpty = null;

  @JsonProperty("emptyFieldText")
  private String emptyFieldText = null;

  @JsonProperty("isPublic")
  private Boolean isPublic = null;

  @JsonProperty("parent")
  private CustomField parent = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public CustomFieldDefaults canBeEmpty(Boolean canBeEmpty) {
    this.canBeEmpty = canBeEmpty;
    return this;
  }

   /**
   * Get canBeEmpty
   * @return canBeEmpty
  **/
  @Schema(description = "")
  public Boolean isCanBeEmpty() {
    return canBeEmpty;
  }

  public void setCanBeEmpty(Boolean canBeEmpty) {
    this.canBeEmpty = canBeEmpty;
  }

  public CustomFieldDefaults emptyFieldText(String emptyFieldText) {
    this.emptyFieldText = emptyFieldText;
    return this;
  }

   /**
   * Get emptyFieldText
   * @return emptyFieldText
  **/
  @Schema(description = "")
  public String getEmptyFieldText() {
    return emptyFieldText;
  }

  public void setEmptyFieldText(String emptyFieldText) {
    this.emptyFieldText = emptyFieldText;
  }

  public CustomFieldDefaults isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @Schema(description = "")
  public Boolean isIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public CustomFieldDefaults parent(CustomField parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @Schema(description = "")
  public CustomField getParent() {
    return parent;
  }

  public void setParent(CustomField parent) {
    this.parent = parent;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldDefaults customFieldDefaults = (CustomFieldDefaults) o;
    return Objects.equals(this.canBeEmpty, customFieldDefaults.canBeEmpty) &&
        Objects.equals(this.emptyFieldText, customFieldDefaults.emptyFieldText) &&
        Objects.equals(this.isPublic, customFieldDefaults.isPublic) &&
        Objects.equals(this.parent, customFieldDefaults.parent) &&
        Objects.equals(this.id, customFieldDefaults.id) &&
        Objects.equals(this.$type, customFieldDefaults.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canBeEmpty, emptyFieldText, isPublic, parent, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldDefaults {\n");
    
    sb.append("    canBeEmpty: ").append(toIndentedString(canBeEmpty)).append("\n");
    sb.append("    emptyFieldText: ").append(toIndentedString(emptyFieldText)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
