<repository lastmodified='20220629040358.289'>
  <resource id='com.jetbrains.plugins.youtrack-confluence-plugin/1.0.0.SNAPSHOT' symbolicname='com.jetbrains.plugins.youtrack-confluence-plugin' presentationname='youtrack-confluence-plugin' uri='youtrack-confluence-plugin.jar' version='1.0.0.SNAPSHOT'>
    <description>This is the com.jetbrains.plugins:youtrack-confluence-plugin for Atlassian Confluence.</description>
    <size>2493981</size>
    <documentation>https://jetbrains.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.jetbrains.plugins.youtrack-confluence-plugin'/>
      <p n='presentationname' v='youtrack-confluence-plugin'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.jetbrains.plugins.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.content.render.xhtml))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.content.render.xhtml;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.macro))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.macro;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.pages))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.pages;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.renderer))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.renderer;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.renderer.radeox.macros))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.renderer.radeox.macros;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.confluence.util.velocity))' extend='false' multiple='false' optional='true'>Import package com.atlassian.confluence.util.velocity;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='true'>Import package com.atlassian.plugin.osgi.factory;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.renderer.v2.components))' extend='false' multiple='false' optional='true'>Import package com.atlassian.renderer.v2.components;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.auth))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api.auth;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.pluginsettings))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api.pluginsettings;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.transaction))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api.transaction;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.user))' extend='false' multiple='false' optional='true'>Import package com.atlassian.sal.api.user;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.atlassian.templaterenderer))' extend='false' multiple='false' optional='true'>Import package com.atlassian.templaterenderer;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.google.common.base))' extend='false' multiple='false' optional='true'>Import package com.google.common.base;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect))' extend='false' multiple='false' optional='true'>Import package com.google.common.collect;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.util))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.util;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.config))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.config;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.config.entities))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.config.entities;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.interceptor))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.interceptor;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.interceptor.component))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.interceptor.component;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.util))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.util;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.validator))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.validator;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork.validator.validators))' extend='false' multiple='false' optional='true'>Import package com.opensymphony.xwork.validator.validators;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=com.oreilly.servlet))' extend='false' multiple='false' optional='true'>Import package com.oreilly.servlet;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=dori.jasper.engine))' extend='false' multiple='false' optional='true'>Import package dori.jasper.engine;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=dori.jasper.engine.export))' extend='false' multiple='false' optional='true'>Import package dori.jasper.engine.export;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=freemarker.cache))' extend='false' multiple='false' optional='true'>Import package freemarker.cache;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=freemarker.ext.beans))' extend='false' multiple='false' optional='true'>Import package freemarker.ext.beans;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=freemarker.ext.jsp))' extend='false' multiple='false' optional='true'>Import package freemarker.ext.jsp;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=freemarker.ext.servlet))' extend='false' multiple='false' optional='true'>Import package freemarker.ext.servlet;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=freemarker.template))' extend='false' multiple='false' optional='true'>Import package freemarker.template;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=http.utils.multipartrequest))' extend='false' multiple='false' optional='true'>Import package http.utils.multipartrequest;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='true'>Import package javax.annotation;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.inject))' extend='false' multiple='false' optional='true'>Import package javax.inject;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='true'>Import package javax.servlet.http;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.servlet.jsp))' extend='false' multiple='false' optional='true'>Import package javax.servlet.jsp;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.servlet.jsp.tagext))' extend='false' multiple='false' optional='true'>Import package javax.servlet.jsp.tagext;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.swing))' extend='false' multiple='false' optional='true'>Import package javax.swing;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.swing.event))' extend='false' multiple='false' optional='true'>Import package javax.swing.event;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.swing.table))' extend='false' multiple='false' optional='true'>Import package javax.swing.table;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.datatype))' extend='false' multiple='false' optional='true'>Import package javax.xml.datatype;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=ognl))' extend='false' multiple='false' optional='true'>Import package ognl;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.fileupload))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.fileupload;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.lang;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang3))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.lang3;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.logging;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http))' extend='false' multiple='false' optional='true'>Import package org.apache.http;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.methods))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.methods;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.utils))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.utils;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.socket))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.socket;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.ssl))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.ssl;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.client))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.client;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.ssl))' extend='false' multiple='false' optional='true'>Import package org.apache.http.ssl;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.http.util))' extend='false' multiple='false' optional='true'>Import package org.apache.http.util;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.app))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.app;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.app.event))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.app.event;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.context))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.context;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.exception))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.exception;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime.directive))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime.directive;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime.parser))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime.parser;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime.parser.node))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime.parser.node;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime.resource))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime.resource;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.runtime.resource.loader;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.servlet))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.servlet;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.util.introspection))' extend='false' multiple='false' optional='true'>Import package org.apache.velocity.util.introspection;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.jfree.chart))' extend='false' multiple='false' optional='true'>Import package org.jfree.chart;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.aop.support;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.config;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.parsing;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.support;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.xml;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='true'>Import package org.springframework.context.annotation;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='true'>Import package org.springframework.core.io;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='true'>Import package org.springframework.stereotype;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='true'>Import package org.springframework.util;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.bootstrap))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom.bootstrap;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.ls))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom.ls;resolution:=optional;version=0</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional;version=0</require>
  </resource>
</repository>